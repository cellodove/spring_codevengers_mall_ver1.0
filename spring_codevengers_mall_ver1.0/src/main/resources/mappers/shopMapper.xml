<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ven.codevengers.mappers.shopMapper">

<!-- 카테고리별 상품 리스트 -->
<!-- <select id="list" resultType="ven.spring.mall.model.ItemViewVO">
select
    g.item_num, g.item_name, g.item_cateCode, c.cateCodeRef, c.cateName, item_price, item_allnumber, item_summary, item_picture, item_date, g.item_picture, g.item_thumbImg
        from mall_item g
            inner join item_category c
                on g.item_cateCode = c.cateCode           
            where g.item_cateCode = #{item_cateCode}
</select> -->


<!-- 카테고리별 상품 리스트 : 1차 분류 -->
<select id="list_1" resultType="ven.spring.mall.model.ItemViewVO">
select
    g.item_num, g.item_name, g.item_cateCode, c.cateCodeRef, c.cateName,
    item_price, item_allnumber, item_summary, item_picture, item_date, g.item_picture, g.item_thumbImg
        from mall_item g
            inner join item_category c
                on g.item_cateCode = c.cateCode           
            where g.item_cateCode = #{item_cateCode}
             or c.cateCodeRef = #{cateCodeRef}
</select>

<!-- 카테고리별 상품 리스트 : 2차 분류 -->
<select id="list_2" resultType="ven.spring.mall.model.ItemViewVO">
select
    g.item_num, g.item_name, g.item_cateCode, c.cateCodeRef, c.cateName,
    item_price, item_allnumber, item_summary, item_picture, item_date, g.item_picture, g.item_thumbImg
        from mall_item g
            inner join item_category c
                on g.item_cateCode = c.cateCode           
            where g.item_cateCode = #{item_cateCode}
</select>


<!-- 상품 조회 + 카테고리 조인-->
<select id="itemView" resultType="ven.spring.mall.model.ItemViewVO">
 select
     g.item_num, g.item_name, g.item_catecode, c.cateCodeRef, c.cateName, item_price, item_allnumber, item_summary, item_picture, item_date, g.item_picture, g.item_thumbImg
         from mall_item g
             inner join item_category c
                 on g.item_cateCode = c.cateCode          
            where g.item_num = #{item_num}
</select>


<!-- 상품 소감(댓글) 작성 -->
<insert id="addReview">
 insert into review_board (item_num, mem_id, rbrd_num, rbrd_content, rbrd_date)
     values (#{item_num}, #{mem_id}, REVIEW_SEQ.nextval, #{rbrd_content}, sysdate)
</insert>


<!-- 상품 소감(댓글) 리스트 -->
<select id="reviewList" resultType="ven.spring.mall.model.ReviewBoardListVO">
 select
     r.item_num, r.mem_id, r.rbrd_num, r.rbrd_content, r.rbrd_date, m.mem_name
 from review_board r
     inner join member m
         on r.mem_id = m.mem_id
     where item_num = #{item_num}
</select>

<!-- 상품 댓글 삭제 -->
<delete id="deleteReview">
delete review_board
 where rbrd_num = #{rbrd_num}
 	and mem_id = #{mem_id}
</delete>

<!-- 댓글삭제전 아이디체크 -->
<select id="reviewIdCheck" resultType="String">
select mem_id
	from review_board
		where rbrd_num = #{rbrd_num}
</select>

<!-- 상품댓글 수정 -->
<update id="modifyReview">
update review_board
	set
		rbrd_content = #{rbrd_content}
	where rbrd_num = #{rbrd_num}
		and mem_id = #{mem_id}
</update>

<!-- 장바구니 담기 -->
<insert id="addWishList">
	insert into item_wishlist(wishlist_num, mem_id, item_num, wishlist_stock)
		values (WISHLIST_SEQ.nextval, #{mem_id}, #{item_num}, #{wishlist_stock})
</insert>

<!-- 장바구니 리스트 -->
<select id="wishListList" resultType="ven.spring.mall.model.WishListListVO">
 select
     row_number() over(order by c.wishlist_num desc) as num,
     c.wishlist_num, c.mem_id, c.item_num, c.wishlist_stock, c.wishlist_date,
     g.item_name, g.item_price, g.item_thumbImg
 from item_wishlist c
     inner join mall_item g
         on c.item_num = g.item_num   
     where c.mem_id = #{mem_id}
</select>


<!-- 장바구니 삭제 -->
<delete id="deleteWishList">
delete item_wishlist
	where wishlist_num = #{wishlist_num}
		and mem_id = #{mem_id}
</delete>

<!-- 주문 정보 -->
<insert id="orderInfo">
 insert into mall_order(cor_id, mem_id, cor_rec, mem_zipcode, mem_adress1, mem_adress2, mem_tel1,mem_tel2,mem_tel3, cor_amount)
     values(#{cor_id}, #{mem_id}, #{cor_rec}, #{mem_zipcode}, #{mem_adress1}, #{mem_adress2}, #{mem_tel1},#{mem_tel2},#{mem_tel3}, #{cor_amount})
</insert>
   
<!-- 주문 상세 정보 --> 
<insert id="orderInfo_Details">
 insert into mall_order_details(cor_details_num, cor_id, item_num, wishlist_stock)
     select mall_order_details_seq.nextval, #{cor_id}, item_num, wishlist_stock
         from item_wishlist   
</insert> 


<!-- 카트 비우기 -->
<delete id="wishListAllDelete">
 delete item_wishlist
     where mem_id = #{mem_id}
</delete>


<!-- 특정 유저의 주문 목록 -->
<select id="orderList" resultType="ven.spring.mall.model.MallOrderVO">
 select
     cor_id, mem_id, cor_rec, mem_zipcode, mem_adress1, mem_adress2, mem_tel1,mem_tel2,mem_tel3, cor_amount, cor_date
 from mall_order 
     where mem_id = #{mem_id}
</select>


<!-- 특정 주문 목록 -->
<select id="orderView" resultType="ven.spring.mall.model.MallOrderListVO">
 select
     o.cor_id, o.mem_id, o.cor_rec, o.mem_zipcode, o.mem_adress1, o.mem_adress2, o.mem_tel1,o.mem_tel2,o.mem_tel3, o.cor_amount, o.cor_date,
     d.cor_details_num, d.item_num, d.wishlist_stock,
     g.item_name, g.item_thumbImg, g.item_price
 from mall_order o
         inner join mall_order_details d
             on o.cor_id = d.cor_id
         inner join mall_item g
             on d.item_num = g.item_num
     where o.mem_id = #{mem_id}
         and o.cor_id = #{cor_id}
</select>









</mapper>