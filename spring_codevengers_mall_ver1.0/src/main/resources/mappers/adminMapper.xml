<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ven.codevengers.mappers.adminMapper">



<!-- 카테고리 호출 -->
<select id="category"  resultType="ven.spring.mall.model.CategoryVO">
 select
  	level, cateName, cateCode, cateCodeRef
 from item_category
     start with cateCodeRef is null connect by prior cateCode = cateCodeRef
</select>

<!-- 상품추가 -->
<insert id="addItem">
insert into mall_item(item_num, item_name, item_catecode, item_price, item_allnumber, item_summary, item_date, item_picture, item_thumbImg)
	values(ITEM_NUM_SEQ.nextval, #{item_name}, #{item_catecode},#{item_price}, #{item_allnumber}, #{item_summary}, sysdate, #{item_picture}, #{item_thumbImg})
</insert>

<!-- 상품목록 -->
<!-- <select id="itemList" resultType="ven.spring.mall.model.MallItemVO">
select
	item_num, item_name, item_catecode ,item_type, item_size, item_gender, item_price, item_allnumber, item_summary, item_date, item_picture, item_thumbImg
from mall_item
	order by item_num desc
</select> -->

<!-- 상품목록 -->
<select id="itemList" resultType="ven.spring.mall.model.ItemViewVO">
 select
     g.item_num, g.item_name, g.item_catecode, c.cateCodeRef, c.cateName, item_price, item_allnumber, item_summary, item_picture, item_date, g.item_picture, g.item_thumbImg
         from mall_item g
             inner join item_category c
                 on g.item_cateCode = c.cateCode
</select>













<!-- 상품조회 -->
<!-- <select id="itemView" resultType="ven.spring.mall.model.MallItemVO">
 select item_num, item_name, item_cateCode, item_price, item_allnumber, item_summary, item_picture, item_thumbImg, item_date
     from mall_item
         where item_num = #{item_num}
</select> -->


<!-- 상품 조회 + 카테고리 조인-->
<select id="itemView" resultType="ven.spring.mall.model.ItemViewVO">
 select
     g.item_num, g.item_name, g.item_catecode, c.cateCodeRef, c.cateName, item_price, item_allnumber, item_summary, item_picture, item_date, g.item_picture, g.item_thumbImg
         from mall_item g
             inner join item_category c
                 on g.item_cateCode = c.cateCode          
            where g.item_num = #{item_num}
</select>




<!-- 상품수정 -->
<update id="itemModify">
	update mall_item
		set
			item_name = #{item_name},
			item_catecode = #{item_catecode},
			item_price = #{item_price},
			item_allnumber = #{item_allnumber},
			item_summary = #{item_summary},
			item_picture = #{item_picture},
			item_thumbImg = #{item_thumbImg}
		where item_num = ${item_num}

</update>

<!-- 상품삭제 -->
<delete id="itemDelete">
delete
	mall_item
where item_num = #{item_num}
</delete>


<!-- 모든 유저의 주문 목록 -->
<select id="orderList" resultType="ven.spring.mall.model.MallOrderVO">
 select
     cor_id, mem_id, cor_rec, mem_zipcode, mem_adress1, mem_adress2, mem_tel1, mem_tel2, mem_tel3, cor_amount, cor_date, delivery
 from mall_order
</select>

<!-- 특정 주문 목록 -->
<select id="orderView" resultType="ven.spring.mall.model.MallOrderListVO">
 select
    o.cor_id, o.mem_id, o.cor_rec, o.mem_zipcode, o.mem_adress1, o.mem_adress2, o.mem_tel1,o.mem_tel2,o.mem_tel3, o.cor_amount, o.cor_date,
     d.cor_details_num, d.item_num, d.wishlist_stock,
     g.item_name, g.item_thumbImg, g.item_price
 from mall_orde o
         inner join mall_orde_details d
             on o.cor_id = d.cor_id
         inner join mall_item g
             on d.item_num = g.item_num
     where o.cor_id = #{cor_id}
</select>



























</mapper>